{"version":3,"sources":["components/Header.jsx","components/Start.jsx","components/List.jsx","components/Favorites.jsx","components/Add.jsx","App.js","serviceWorker.js","index.js","images/Image1.svg"],"names":["Header","props","className","onClick","toListComp","toAddComp","toFavoritesComp","Start","nextComp","src","Image1","alt","List","useState","filter","setFilter","status","isLoaded","items","item","name","toLowerCase","includes","birth_year","gender","map","id","key","addToFavorites","addFavorite","handleFavorite","type","placeholder","onKeyUp","event","target","value","Favorites","favoritesList","content","concat","favorites","length","own_favorite","Add","setName","setBirthYear","setGender","character","onChange","e","charAt","toUpperCase","slice","App","setFavorites","setItems","setIsLoaded","currentComp","setCurrentComp","useEffect","list","getData","url","fetch","then","res","json","response","a","next","results","forEach","push","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.c1da5d80.chunk.js","sourcesContent":["import React from 'react';\n\nconst Header = (props) => {\n\treturn (\n\t\t<header>\n\t\t\t<h2 className=\"logo\">\n\t\t\t\tStar Wars \n\t\t\t</h2>\n\t\t\t<nav>\n\t\t\t\t<button onClick={props.toListComp} className=\"button-nav\">Information list</button>\n\t\t\t\t<button onClick={props.toAddComp} className=\"button-nav\">Add favorite</button>\n\t\t\t\t<button onClick={props.toFavoritesComp} className=\"button-nav\"> Favorites</button>\n\t\t\t</nav>\n\t\t</header>\n\t)\n}\nexport default Header;","import React from 'react';\nimport Image1 from '../images/Image1.svg'\n\nconst Start = ({nextComp}) => {\n\treturn(\n\t\t<div className=\"Start\">\n\t\t\t<div className=\"container-start\">\n\t\t\t\t<img src={Image1} alt=\"Text\" className=\"item\"/>\n\t\t\t\t<div className=\"flex-start\">\n\t\t\t\t\t<button onClick={nextComp}>Continue</button>\n\t\t\t\t</div>\n\t\t\t</div>\t\n\t\t</div>\n\t)\n}\nexport default Start;","import React, {useState} from 'react';\n\nconst List = (props) => {\n\tconst [filter, setFilter] = useState('')\n\n\tfunction handleSearch(event){\n\t\tsetFilter(event.target.value)\n\t}\n\n\tconst handleFavorite = item => {\n\t\tlet addToFavorites = {name: item.name, birth_year: item.birth_year, gender: item.gender}\n\n\t\tprops.addFavorite(addToFavorites)\n\t}\n\n\tlet status = null;\n\tif (!props.isLoaded) {\n\t\tstatus = <div className=\"loading\"><h2>Loading...</h2></div>;\n\t} \n\telse {\n\t\tstatus = \n\t\t\tprops.items\n\t\t\t.filter(item =>{\n\t\t\t\treturn item.name.toLowerCase().includes(filter.toLowerCase()) ||  item.birth_year.toLowerCase().includes(filter.toLowerCase()) ||  item.gender.toLowerCase().includes(filter.toLowerCase()) \n\t\t\t})\n\t\t\t.map((item, id) =>\n\t\t\t\t<div key={id} className=\"container-list\">\n\t\t\t\t\t<p>{item.name}</p>\n\t\t\t\t\t<p>{item.birth_year}</p>\n\t\t\t\t\t<p>{item.gender}</p>\n\t\t\t\t\t<button className=\"btn-favorite\" onClick={() => handleFavorite(item)}>Add to favorites</button>\n\t\t\t\t</div>\n\t\t\t)\n\t}\n\n\treturn(\n\t\t<div className=\"App\">\n\t\t\t<input type=\"text\" placeholder=\"Search\" onKeyUp={handleSearch}/> \n\t\t\t<div>{status}</div>\n\t\t</div>\n\t)\n}\nexport default List;\n","import React from 'react';\n\n\nconst Favorites = (props) => {\n\tlet favoritesList = [];\n\n\tfavoritesList = favoritesList.concat(props.favorites)\n\t\t\t\n\tlet content = null;\n\tif(favoritesList.length === 0){\n\t\tcontent = <h2 className=\"no-favorites\">No favorites</h2>\n\t}\n\telse{\n\t\tcontent = \n\t\t\tfavoritesList.map((item, id) => \n\t\t\t\t<div key={id} className=\"container-list\">\n\t\t\t\t\t<p>{item.name}</p>\n\t\t\t\t\t<p>{item.birth_year}</p>\n\t\t\t\t\t<p>{item.gender}</p>\n\t\t\t\t\t<h3 className=\"own-favorite\">{item.own_favorite}</h3>\n\t\t\t\t</div>\n\t\t)\n\t}\n\n\treturn(\n\t\t<div className=\"App\">\n\t\t\t<div>{content}</div>\t\n\t\t</div>\n\t)\n\t\n\n}\nexport default Favorites;","import React, {useState} from 'react';\n\nconst Add = (props) => {\n\tconst [name, setName] = useState('')\n\tconst [birth_year, setBirthYear] = useState('')\n\tconst [gender, setGender] = useState('')\n\n\tconst handleAdd = () => {\n\t\tprops.addFavorite(character)\t\t\n\t}\n\n\tlet character = {\n\t\tname: name,\n\t\tbirth_year: birth_year,\n\t\tgender: gender,\n\t\town_favorite: 'Own favo'\n\t}\n\t\n\treturn(\n\t\t<div className=\"Add\">\n\t\t\t<div id=\"form-group\">\n\t\t\t\t<label>Name</label>\n\t\t\t\t<input className=\"input-add\" type=\"text\" placeholder=\"Enter the name of the character\" value={name} onChange={e=>setName(e.target.value.charAt(0).toUpperCase() + e.target.value.slice(1))} onClick={()=>setName('')}/>\n\t\t\t\t<label>Birth year</label>\n\t\t\t\t<input className=\"input-add\" type=\"text\" placeholder=\"The characters birthyear\" value={birth_year} onChange={e=>setBirthYear(e.target.value.charAt(0).toUpperCase() + e.target.value.slice(1))} onClick={()=>setBirthYear('')}/>\n\t\t\t\t<label>Gender</label>\n\t\t\t\t<input className=\"input-add\" type=\"text\" placeholder=\"Enter the characters gender\" value={gender} onChange={e=>setGender(e.target.value.charAt(0).toUpperCase() + e.target.value.slice(1))} onClick={()=>setGender('')}/>\n\t\t\t\t<button className=\"btn-add\" onClick={handleAdd}>Add character</button>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\nexport default Add;","import React, {useState, useEffect} from 'react';\nimport './App.css';\nimport Header from './components/Header'\nimport Start from './components/Start'\nimport List from './components/List'\nimport Favorites from './components/Favorites'\nimport Add from './components/Add'\n\nfunction App() {\n\tconst [favorites, setFavorites] = useState([])\n\tconst [items, setItems] = useState([])\n\tconst [isLoaded, setIsLoaded] = useState(false);\n\n\tconst addFavorite = item => {\n\t\tsetFavorites([...favorites, item])\n\t}\n\n\tconst START = 'start', LIST = 'list', FAVORITES = 'favorites', ADD = 'add';\n\tconst [currentComp, setCurrentComp] = useState(START);\n\n\tlet content = null;\n    switch (currentComp) {\n        case START:\n            content = ( <Start nextComp={() => setCurrentComp(LIST)}/> )\n            break;\n        case LIST:\n            content = ( <List items={items} setItems={setItems} isLoaded={isLoaded} addFavorite={addFavorite} /> )\n\t\t\tbreak;\n\t\tcase FAVORITES:\n\t\t\tcontent = ( <Favorites favorites={favorites} setFavorites={setFavorites}/> )\n\t\t\tbreak;\n\t\tcase ADD:\n\t\t\tcontent = ( <Add addFavorite={addFavorite}/> )\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tcontent = ( <Start/> )\n\t}\n\n\tuseEffect(() => {\n\t\tlet list = [];\n\t\tfunction getData(url){\n\t\t\tfetch(url)\n\t\t\t.then((res) => res.json())\n\t\t\t.then(async(response) =>{\n\t\n\t\t\t\tlet next = response.next;\n\t\t\t\tif(next !== null){\n\t\t\t\t\tawait getData(next)\n\t\t\t\t\tresponse.results.forEach(item => list.push(item))\n\t\t\t\t}\t\n\t\t\t\telse{\n\t\t\t\t\tsetItems(list)\n\t\t\t\t\tsetIsLoaded(true)\n\t\t\t\t}\t\n\t\t\t})\t\n\t\t}\n\t\tgetData('https://swapi.dev/api/people/')\n\t}, []) // UseEffects slut\n\t\n\n\n\treturn (\n\t<div className=\"App\">\n\t\t<Header toListComp={() => setCurrentComp(LIST)} toAddComp={() =>setCurrentComp(ADD)} toFavoritesComp={() => setCurrentComp(FAVORITES)}/>\n\t\t{content}\n\t</div>\n\t);\n\t}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/Image1.475b7094.svg\";"],"sourceRoot":""}